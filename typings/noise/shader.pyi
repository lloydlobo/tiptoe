"""
This type stub file was generated by pyright.
"""

from ctypes import *
from pyglet.gl import *

class GLSLException(Exception):
    ...


def glsl_log(handle): # -> Any | Literal['']:
    ...

class Shader:
    s_tag = ...
    def __init__(self, name, prog) -> None:
        ...
    
    def __del__(self): # -> None:
        ...
    
    def addDependency(self, shader): # -> Self:
        ...
    
    def destroy(self): # -> None:
        ...
    
    def shaderType(self):
        ...
    
    def isCompiled(self): # -> bool:
        ...
    
    def attachTo(self, program): # -> None:
        ...
    
    def attachFlat(self, program): # -> None:
        ...
    
    def compileFlat(self): # -> None:
        ...
    
    def compile(self): # -> None:
        ...
    


class VertexShader(Shader):
    def shaderType(self):
        ...
    


class FragmentShader(Shader):
    def shaderType(self):
        ...
    


class ShaderProgram:
    def __init__(self, vertex_shader=..., fragment_shader=...) -> None:
        ...
    
    def __del__(self): # -> None:
        ...
    
    def destroy(self): # -> None:
        ...
    
    def setShader(self, shader): # -> None:
        ...
    
    def link(self):
        ...
    
    def prog(self): # -> int:
        ...
    
    def install(self): # -> None:
        ...
    
    def uninstall(self): # -> None:
        ...
    
    def uniformLoc(self, var):
        ...
    
    def uset1F(self, var, x): # -> None:
        ...
    
    def uset2F(self, var, x, y): # -> None:
        ...
    
    def uset3F(self, var, x, y, z): # -> None:
        ...
    
    def uset4F(self, var, x, y, z, w): # -> None:
        ...
    
    def uset1I(self, var, x): # -> None:
        ...
    
    def uset3I(self, var, x, y, z): # -> None:
        ...
    
    def usetM4F(self, var, m): # -> None:
        ...
    
    def usetTex(self, var, u, v): # -> None:
        ...
    


__all__ = ['VertexShader', 'FragmentShader', 'ShaderProgram', 'GLSLException']
